@{
    ViewBag.Title = "Comments";
    if (User.IsInRole("Support"))
    {
    Layout = "~/Views/Shared/_LayoutWithLink.cshtml";
    }
    if(User.IsInRole("Admin")){
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    }



<div class="container">
<h1>Comments</h1>
    

<div  class="tablecontainer">

    <div class="">
        <div id="myFormContent">
        </div>
    </div>

    <div class="">
        <table id="myDatatable" class="table table-striped table-bordered  table-hover">
            <thead>
                <tr>
                    
                    <th>Type</th>
                    <th>Date</th>
                    <th>Detail</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>Type</th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
</div>

<script>
    $(document).ready(function () {

        var oTableData = {
            "ajax": {
                "url": '/UserComments/GetAll',
                "type": "get",
                "datatype": "json"
            },
            "columns": [
              
                { "data": "cmntype", "autoWidth": true },
                { "data": "cmntdate", "autoWidth": true },
                { "data": "cmntcontent", "autoWidth": true },
                {
                    "orderable": false,
                    "data": "cmntid",
                    "width": "50px",
                    "render": function (data, type, row) {
                        var deletecomment = '<a class="popup"  href="/UserComments/delete/' + data + '"><i class="fa fa-trash fa-lg" aria-hidden="true"></i></a>';
                        return '<a class="popup" href="/UserComments/save/' + data + '"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>' + deletecomment;
                    }
                }
            ],
            "columnDefs": [{
                "targets": 1,
                "render": function (value) {
                    if (value === null) return "";

                    var pattern = /Date\(([^)]+)\)/;
                    var results = pattern.exec(value);
                    var dt = new Date(parseFloat(results[1]));


                    var months = ["January", "February", "March", "April", "May", "June",
                        "July", "August", "September", "October", "November", "December"];
                    var doubledigitdate = dt.getDate().toString().length == 2 ? dt.getDate() : "0" + dt.getDate();
                    var doubledigitmonth = (dt.getMonth()+1).toString().length == 2 ? (dt.getMonth()+1) : "0" + (dt.getMonth()+1);

                    return '<span class="hidden">' + dt.getFullYear() + doubledigitmonth + doubledigitdate + '</span> ' +
                        dt.getDate() + "-" + (months[dt.getMonth()]) + "-" + dt.getFullYear() +
                    ' <span class="hidden">' + doubledigitmonth + "/" + doubledigitdate + "/" + dt.getFullYear() + '</span> ';
                   
                }
            }],
           
                initComplete: function () {
                    this.api().columns([0]).every(function () {
                        var column = this;
                        var select = $('<select><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });


                    });
                },
        };
        var savepage = '/UserComments/save/0';
        filldatatable(oTableData, savepage);
        //deletecomment(oTableData);
    });

    function deletecomment(oTable) {
        $(document).on('click', "a.deletecomment", function (e) {
            e.preventDefault();
            var confirmdelete = confirm("Are you sure, want to delete?");
            if (!confirmdelete)
                return false;

            $.ajax({
                url: this,
                type: "POST",
                contentType: false, // Not to set any content header  
                processData: false, // Not to process data  
                //data: formData,
                success: function (result) {
                    if (result.status) {
                        oTable.ajax.reload();
                    }
                    else {
                        if (result.message != null)
                            alert(result.message);
                    }
                },
                error: function (err) {
                    alert(err.statusText);
                }
            });
            return false;
        });
    }

    </script>


@section headerstyle{

    @Styles.Render("~/Content/bootstrapcalender")
    }

@section scriptsafterbootstrap{
 
    @Scripts.Render("~/bundles/bootstrapcalender")

    }